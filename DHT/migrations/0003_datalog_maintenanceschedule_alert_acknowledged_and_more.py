# Generated by Django 5.1.3 on 2024-12-30 10:12

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('DHT', '0002_alert_sensorsettings_alter_sensordata_options_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DataLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('event_type', models.CharField(choices=[('data_capture', 'Data Capture'), ('alert_generated', 'Alert Generated'), ('alert_resolved', 'Alert Resolved'), ('system_status', 'System Status'), ('maintenance', 'Maintenance'), ('error', 'Error'), ('warning', 'Warning'), ('info', 'Information')], max_length=50)),
                ('description', models.TextField()),
                ('metadata', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='MaintenanceSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('scheduled_date', models.DateTimeField()),
                ('completed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=20)),
            ],
            options={
                'ordering': ['-scheduled_date'],
            },
        ),
        migrations.AddField(
            model_name='alert',
            name='acknowledged',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='alert',
            name='acknowledged_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='alert',
            name='acknowledged_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='acknowledged_alerts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='alert',
            name='assigned_to',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_alerts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='sensordata',
            name='battery_level',
            field=models.IntegerField(blank=True, help_text='Battery level of the sensor in percentage', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AddField(
            model_name='sensordata',
            name='data_quality',
            field=models.CharField(choices=[('high', 'High Quality'), ('medium', 'Medium Quality'), ('low', 'Low Quality'), ('error', 'Error')], default='high', max_length=20),
        ),
        migrations.AddField(
            model_name='sensordata',
            name='location',
            field=models.CharField(default='main-sensor', max_length=100),
        ),
        migrations.AddField(
            model_name='sensorsettings',
            name='alert_phone',
            field=models.CharField(blank=True, help_text='Phone number for SMS alerts', max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='sensorsettings',
            name='critical_battery_threshold',
            field=models.IntegerField(default=20, help_text='Battery level threshold for alerts (%)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AddField(
            model_name='sensorsettings',
            name='data_retention_days',
            field=models.IntegerField(default=365, help_text='Number of days to retain sensor data'),
        ),
        migrations.AddField(
            model_name='sensorsettings',
            name='maintenance_mode',
            field=models.BooleanField(default=False, help_text='When enabled, certain alerts are suppressed'),
        ),
        migrations.AlterField(
            model_name='alert',
            name='severity',
            field=models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=10),
        ),
        migrations.AlterField(
            model_name='alert',
            name='type',
            field=models.CharField(choices=[('temperature', 'Temperature Alert'), ('humidity', 'Humidity Alert'), ('system', 'System Alert'), ('battery', 'Battery Alert'), ('connection', 'Connection Alert'), ('data_quality', 'Data Quality Alert')], max_length=50),
        ),
        migrations.AddIndex(
            model_name='alert',
            index=models.Index(fields=['acknowledged'], name='DHT_alert_acknowl_c7aafd_idx'),
        ),
        migrations.AddIndex(
            model_name='sensordata',
            index=models.Index(fields=['date_recorded', 'location'], name='DHT_sensord_date_re_803866_idx'),
        ),
        migrations.AddIndex(
            model_name='sensordata',
            index=models.Index(fields=['data_quality'], name='DHT_sensord_data_qu_ed3d8d_idx'),
        ),
        migrations.AddField(
            model_name='datalog',
            name='related_data',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='logs', to='DHT.sensordata'),
        ),
        migrations.AddField(
            model_name='datalog',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='data_logs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='maintenanceschedule',
            name='completed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='completed_maintenances', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='datalog',
            index=models.Index(fields=['timestamp'], name='DHT_datalog_timesta_46282c_idx'),
        ),
        migrations.AddIndex(
            model_name='datalog',
            index=models.Index(fields=['event_type'], name='DHT_datalog_event_t_252c03_idx'),
        ),
        migrations.AddIndex(
            model_name='maintenanceschedule',
            index=models.Index(fields=['scheduled_date'], name='DHT_mainten_schedul_8146f7_idx'),
        ),
        migrations.AddIndex(
            model_name='maintenanceschedule',
            index=models.Index(fields=['completed'], name='DHT_mainten_complet_c4de7d_idx'),
        ),
    ]
